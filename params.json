{"name":"simple-gallery.js","tagline":"A lightweight jQuery extension for quickly creating highly customizable photo galleries.","body":"# simple-gallery.js #\r\n\r\n**simple-gallery.js** is a lightweight jQuery widget that makes it quick and \r\neasy to implement highly customizable photo galleries on your website.  The \r\nidea behind the project was to separate the work of creating a cycling \r\nslideshow animation from the gallery's design process, allowing for greater \r\nfacility of code-reuse and fewer headaches.  simple-gallery.js creates a \r\nslideshow you can easily customize without having to worry about superfluous \r\ncode and unneeded options.\r\n\r\n**CURRENT VERSION: v2.4.0**\r\n\r\n## Get Started ##\r\n\r\nFirst thing's first!  To get started with simple-gallery.js, download the \r\nplugin and include it after you've included both jQuery and jQuery UI:\r\n\r\n```html\r\n<script src=\"/path/to/jquery.min.js\"></script>\r\n<script src=\"/path/to/jquery-ui.min.js\"></script>\r\n<script src=\"/path/to/simple-gallery.min.js\"></script>\r\n```\r\n\r\nNote that the only required element of jQuery UI is the **widget** portion \r\nof the UI core.  Feel free to do a custom download if you would not like to \r\ninclude the full jQuery UI package.  I have also included a \r\n[minified version][jqueryui-widget] of the required jQuery UI code in this \r\nrepository so you can download that and not have to worry about going through \r\nthe jQuery site.\r\n\r\n[jqueryui-widget]: https://github.com/akalicki/jquery-simple-gallery/blob/master/jqueryui-widget.min.js\r\n\r\nThe most basic usage of the simple-gallery.js plugin requires using a standard \r\njQuery selector to choose the target HTML tag in which to display the larger, \r\nselected image and supplying another selector to isolate the source images for \r\nthe gallery.   In other words, the simple-gallery plugin expects something \r\nlike the following:\r\n\r\n```html\r\n<div id=\"thumbnails\">\r\n    <img src=\"../images/img1.jpg\" />\r\n    <img src=\"../images/img2.jpg\" />\r\n    <img src=\"../images/img3.jpg\" />\r\n    <img src=\"../images/img4.jpg\" />\r\n    <img src=\"../images/img5.jpg\" />\r\n    <img src=\"../images/img6.jpg\" />\r\n    <img src=\"../images/img7.jpg\" />\r\n    <img src=\"../images/img8.jpg\" />\r\n    <img src=\"../images/img9.jpg\" />\r\n</div>\r\n<div id=\"displayImage\"></div>\r\n```\r\n\r\nThe area you decide to display your photos (the `<div>` with id `displayImage` \r\nin this case) should be styled with appropriate width and height so that they \r\ncan show up.  The plugin works by changing the background-image of the target \r\ntag, so the tag needs to already occupy the space on the page where you expect \r\nthe photo to load.\r\n\r\nAs soon as the DOM for the page has loaded, you can initialize the \r\ngallery using the following JavaScript code - which should seem familiar as it \r\nworks similarly to other jQuery functions:\r\n\r\n```javascript\r\n$('#displayImage').gallery({source: \"#thumbnails img\"});\r\n```\r\n\r\nThe selector `$('#thumbnails img')` isolates the set of images that you would \r\nlike to turn into a gallery.  They can be separated from the rest of the \r\ndocument in one `<div>` as shown above or scattered throughout - the only \r\nthing that matters is that your selector only chooses `<img>` tags with valid \r\n`src` attributes that point to their corresponding images.  The parameter \r\npassed to the `gallery` function is an options object specifying different \r\nways to customize the plugin.\r\n\r\n## Gallery Options ##\r\n\r\nThe complete set of options that can be passed upon photo gallery \r\ninitialization is listed below:\r\n\r\n+ `source` (mandatory, *no default*) - a string representing the selector for \r\nthe source images used in the photo gallery.  The string supplied can be \r\nanything, so long as the selector `$(source)` will isolate all `<img>` tags \r\nto be displayed in the gallery.\r\n\r\n+ `animate` (optional, *default = true*) - a boolean true/false value \r\nrepresenting whether to animate the slideshow.  If false, the target display \r\nwill only change images when you click on a thumbnail image.\r\n\r\n+ `startImg` (optional, *default = 0*) - the zero-based index of the image to \r\nstart the slideshow at.  A default value of 0 will tell the plugin to start at \r\nthe first image in the selection.\r\n\r\n+ `waitTime` (optional, *default = 5000*) - the time, in milliseconds, to show \r\neach image before beginning the transition to the next one.\r\n\r\n+ `changeTime` (optional, *default = 700*) - the time, in milliseconds, to \r\ntake for each slideshow animation.  A full photo-change takes `2 * changeTime` \r\nmilliseconds (in the default behavior, `changeTime` milliseconds for fading \r\nout an old image and another `changeTime` for fading in the new one).\r\n\r\n+ `easing` (optional, *default = \"swing\"*) - the easing function to use for \r\nphoto transitions.\r\n\r\n+ `restartOnEnd` (optional, *default = true*) - a boolean true/false value \r\nrepresenting whether to restart the slideshow from the beginning after \r\nreaching the end of the collection.\r\n\r\n+ `selectClass` (optional, *default = selected*) - the class name that gets \r\nadded and removed from each thumbnail image in turn when it is displayed in \r\nthe target destination.  This allows you to further customize the look of the \r\nthumbnail for the image that is currently being shown in the gallery.\r\n\r\n+ `showCaptions` (optional, *default = false*) - a boolean true/false value \r\nrepresenting whether to show each image's `title` attribute in the area given \r\nby the selector `captionTarget`.\r\n\r\n+ `captionTarget` (optional, *default = \"\"*) - a string representing the \r\nselector for an area to show the `title` attribute of each image as it is \r\nselected.  Setting the `captionTarget` string will only have an effect if \r\n`showCaptions` is set to `true`.\r\n\r\n### Using Options ###\r\n\r\nsimple-gallery options can be supplied to the plugin in one of two ways.  The easiest way to do so is to supply options to the gallery constructor in an \r\nobject parameter when the function is run like so:\r\n\r\n```javascript\r\n$('#displayImage').gallery({source: \"#thumbnails img\", easing: \"linear\", restartOnEnd: false});\r\n```\r\n\r\nIf you would like to change the options of a gallery instance after it has \r\nbeen instantiated, you can do so as well:\r\n\r\n```javascript\r\n// create gallery linked to '#displayImage'\r\n$('#displayImage').gallery({source: \"#thumbnails img\"});\r\n\r\n// get current values of options\r\n$('#displayImage').gallery('option', 'easing');     // \"swing\"\r\n$('#displayImage').gallery('option', 'changeTime'); // \"700\"\r\n\r\n// set new values of options\r\n$('#displayImage').gallery('option', 'easing', 'linear');\r\n$('#displayImage').gallery('option', 'changeTime', 600);\r\n```\r\n\r\n## Advanced Use ##\r\n\r\nIf the options provided are not enough to obtain the look you would like to \r\nachieve, simple-gallery comes loaded with extra functionality that may be \r\nable to help.\r\n\r\n### Public Functions ###\r\n\r\nThere are currently two public functions which can be called once the gallery \r\nhas been instantiated:\r\n\r\n+ `stopAnimation` - stops the display image from switching to the next photo in \r\nthe gallery.\r\n\r\n+ `resumeAnimation` - resumes the gallery's animation after having been stopped.\r\n\r\nAll public functions are called on the gallery instance of the display image \r\nafter instantiation as follows:\r\n\r\n```javascript\r\n// create gallery linked to '#displayImage'\r\n$('#displayImage').gallery({source: \"#thumbnails img\"});\r\n\r\n// stop and then resume gallery animation\r\n$('#displayImage').gallery(\"stopAnimation\");\r\n$('#displayImage').gallery(\"resumeAnimation\");\r\n```\r\n\r\nA typical usage would be to stop the gallery from animating when the user \r\nhovers their cursor over the targeted display image:\r\n\r\n```javascript\r\n$('#displayImage').on({\r\n    mouseenter: function() {\r\n        $('#displayImage').gallery(\"stopAnimation\");\r\n    },\r\n    mouseleave: function() {\r\n        $('#displayImage').gallery(\"resumeAnimation\");\r\n    }\r\n});\r\n```\r\n\r\n### Event Binding ###\r\n\r\nsimple-gallery.js triggers the following custom events while in use:\r\n\r\n+ `galleryimageload` - triggered when a new picture is loaded into the target \r\ndisplay image.\r\n\r\n+ `galleryclick` - triggered when one of the source thumbnail images is \r\nclicked.\r\n\r\n+ `galleryanimationstop` - triggered when the gallery's `stopAnimation` \r\nmethod is called.\r\n\r\n+ `galleryanimationresume` - triggered when the gallery's `resumeAnimation` \r\nmethod is called.\r\n\r\nHandler functions can be bound to the gallery's events after instantiation \r\nlike so:\r\n\r\n```javascript\r\n// create gallery linked to '#displayImage'\r\n$('#displayImage').gallery({source: \"#thumbnails img\"});\r\n\r\n// attach handler functions to gallery events\r\n$(\"#displayImage\").on({\r\n    galleryimageload: function() {\r\n        console.log(\"new image loaded\");\r\n    },\r\n    galleryclick: function() {\r\n        console.log(\"gallery source image clicked\");\r\n    },\r\n    galleryanimationstop: function() {\r\n        console.log(\"gallery animation stopped\");\r\n    },\r\n    galleryanimationresume: function() {\r\n        console.log(\"gallery animation resumed\");\r\n    }\r\n});\r\n```\r\n\r\n## Examples ##\r\n\r\nA few examples of simple ways to implement this plugin:\r\n\r\n+ [Grid-layout example](https://github.com/akalicki/jquery-simple-gallery/blob/master/examples/grid-layout/index.html)\r\n+ [Row-layout example](https://github.com/akalicki/jquery-simple-gallery/blob/master/examples/row-layout/index.html)\r\n\r\n## Demos ##\r\n\r\nWant to see simple-gallery.js in action?  Check out some sites that currently use it!  Send me a link to your implementation and I'll be happy to add it to the list.\r\n\r\n+ [Columbia University Engineers Without Borders](http://morocco.cuewb.org/#bridge)\r\n+ [Centro de Día Geriátrico](http://cdg.com.py/fotos.php)\r\n\r\n## Contribute ##\r\n\r\nAny and all contributions to this project are welcome!  If I like what you've \r\ndone I will definitely include your changes in the official version.  To \r\nsubmit a contribution, please follow standard git procedure:\r\n\r\n1. [Fork](https://github.com/akalicki/jquery-simple-gallery/fork) the project\r\n2. Make changes and push the commits to a topic branch in your own repository\r\n3. Submit a pull request and I'll get back to you!\r\n\r\n## License ##\r\n\r\nThis project is released under the MIT License.  Read more [here](https://github.com/akalicki/jquery-simple-gallery/blob/master/LICENSE.txt).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}